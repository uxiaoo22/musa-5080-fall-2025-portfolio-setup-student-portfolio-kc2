{
  "hash": "f6003b73f4bfc15c612b5e96b5d47f8d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week 3 In-Class Lab: Data Visualization and EDA\"\nauthor: \"Elizabeth Delmelle\"\ndate: today\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\nexecute:\n  warning: false\n  message: false\neditor: \n  markdown: \n    wrap: 72\n---\n\n## Setup and Data Loading\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(scales)\nlibrary(RColorBrewer)\n# Set your Census API key if you haven't already\ncensus_api_key(\"ec702835845a134b4376c60759aa72ce62f6df59\")\n\n# We'll use Pennsylvania data for consistency with previous weeks\nstate_choice <- \"PA\"\n```\n:::\n\n\n------------------------------------------------------------------------\n\n## Exercise 0: Finding Census Variable Codes\n\n**The Challenge:** You know you want data on total population, median\nincome, and median age, but you don't know the specific Census variable\ncodes. How do you find them?\n\n### 0.1 Load the Variable Dictionary\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load all available variables for ACS 5-year 2022\nacs_vars_2022 <- load_variables(2022, \"acs5\", cache = TRUE)\n\n# Look at the structure\nglimpse(acs_vars_2022)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 28,152\nColumns: 4\n$ name      <chr> \"B01001A_001\", \"B01001A_002\", \"B01001A_003\", \"B01001A_004\", …\n$ label     <chr> \"Estimate!!Total:\", \"Estimate!!Total:!!Male:\", \"Estimate!!To…\n$ concept   <chr> \"Sex by Age (White Alone)\", \"Sex by Age (White Alone)\", \"Sex…\n$ geography <chr> \"tract\", \"tract\", \"tract\", \"tract\", \"tract\", \"tract\", \"tract…\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(acs_vars_2022)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  name        label                                   concept          geography\n  <chr>       <chr>                                   <chr>            <chr>    \n1 B01001A_001 Estimate!!Total:                        Sex by Age (Whi… tract    \n2 B01001A_002 Estimate!!Total:!!Male:                 Sex by Age (Whi… tract    \n3 B01001A_003 Estimate!!Total:!!Male:!!Under 5 years  Sex by Age (Whi… tract    \n4 B01001A_004 Estimate!!Total:!!Male:!!5 to 9 years   Sex by Age (Whi… tract    \n5 B01001A_005 Estimate!!Total:!!Male:!!10 to 14 years Sex by Age (Whi… tract    \n6 B01001A_006 Estimate!!Total:!!Male:!!15 to 17 years Sex by Age (Whi… tract    \n```\n\n\n:::\n:::\n\n\n**What you see:**\n\n-   `name`: The variable code (e.g., \"B01003_001\")\n-   `label`: Human-readable description\n-   `concept`: The broader table this variable belongs to\n\n### 0.2 Search for Population Variables\n\n**Your Task:** Find the variable code for total population.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Search for population-related variables\npopulation_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, \"Total.*population\"))\n\n# Look at the results\nhead(population_vars, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   name       label                                            concept geography\n   <chr>      <chr>                                            <chr>   <chr>    \n 1 B16008_002 \"Estimate!!Total:!!Native population:\"           Citize… tract    \n 2 B16008_003 \"Estimate!!Total:!!Native population:!!5 to 17 … Citize… tract    \n 3 B16008_004 \"Estimate!!Total:!!Native population:!!5 to 17 … Citize… tract    \n 4 B16008_005 \"Estimate!!Total:!!Native population:!!5 to 17 … Citize… tract    \n 5 B16008_006 \"Estimate!!Total:!!Native population:!!5 to 17 … Citize… tract    \n 6 B16008_007 \"Estimate!!Total:!!Native population:!!5 to 17 … Citize… tract    \n 7 B16008_008 \"Estimate!!Total:!!Native population:!!5 to 17 … Citize… tract    \n 8 B16008_009 \"Estimate!!Total:!!Native population:!!5 to 17 … Citize… tract    \n 9 B16008_010 \"Estimate!!Total:!!Native population:!!5 to 17 … Citize… tract    \n10 B16008_011 \"Estimate!!Total:!!Native population:!!18 years… Citize… tract    \n```\n\n\n:::\n\n```{.r .cell-code}\n# Or search in the concept field\npop_concept <- acs_vars_2022 %>%\n  filter(str_detect(concept, \"Total Population\"))\n\nhead(pop_concept)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  name        label                             concept                geography\n  <chr>       <chr>                             <chr>                  <chr>    \n1 B01003_001  Estimate!!Total                   Total Population       block gr…\n2 B25008A_001 Estimate!!Total:                  Total Population in O… block gr…\n3 B25008A_002 Estimate!!Total:!!Owner occupied  Total Population in O… block gr…\n4 B25008A_003 Estimate!!Total:!!Renter occupied Total Population in O… block gr…\n5 B25008B_001 Estimate!!Total:                  Total Population in O… block gr…\n6 B25008B_002 Estimate!!Total:!!Owner occupied  Total Population in O… block gr…\n```\n\n\n:::\n:::\n\n\n**Tip:** Look for \"Total\" followed by \"population\" - usually\n`B01003_001`\n\n### 0.3 Search for Income Variables\n\n**Your Task:** Find median household income variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Search for median income\nincome_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, \"[Mm]edian.*income\"))\n\n# Look specifically for household income\nhousehold_income <- income_vars %>%\n  filter(str_detect(label, \"household\"))\n\nprint(\"Household income variables:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Household income variables:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(household_income)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  name        label                                            concept geography\n  <chr>       <chr>                                            <chr>   <chr>    \n1 B10010_002  Estimate!!Median family income in the past 12 m… Median… tract    \n2 B10010_003  Estimate!!Median family income in the past 12 m… Median… tract    \n3 B19013A_001 Estimate!!Median household income in the past 1… Median… tract    \n4 B19013B_001 Estimate!!Median household income in the past 1… Median… tract    \n5 B19013C_001 Estimate!!Median household income in the past 1… Median… tract    \n6 B19013D_001 Estimate!!Median household income in the past 1… Median… tract    \n```\n\n\n:::\n\n```{.r .cell-code}\n# Alternative: search by concept\nincome_concept <- acs_vars_2022 %>%\n  filter(str_detect(concept, \"Median Household Income\"))\n\nhead(income_concept)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  name        label                                            concept geography\n  <chr>       <chr>                                            <chr>   <chr>    \n1 B19013A_001 Estimate!!Median household income in the past 1… Median… tract    \n2 B19013B_001 Estimate!!Median household income in the past 1… Median… tract    \n3 B19013C_001 Estimate!!Median household income in the past 1… Median… tract    \n4 B19013D_001 Estimate!!Median household income in the past 1… Median… tract    \n5 B19013E_001 Estimate!!Median household income in the past 1… Median… county   \n6 B19013F_001 Estimate!!Median household income in the past 1… Median… tract    \n```\n\n\n:::\n:::\n\n\n**Pattern Recognition:** Median household income is typically\n`B19013_001`\n\n### 0.4 Search for Age Variables\n\n**Your Task:** Find median age variables.\n\n# search for median age\n\n::: {.cell}\n\n```{.r .cell-code}\nage_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, \"[Mm]edian.*age\"))\n```\n:::\n\n### 0.5 Advanced Search Techniques\n\n**Your Task:** Learn more sophisticated search methods.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Search for multiple terms at once\nhousing_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, \"[Mm]edian.*(rent|value)\"))\n\nprint(\"Housing cost variables:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Housing cost variables:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(housing_vars, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   name         label                                          concept geography\n   <chr>        <chr>                                          <chr>   <chr>    \n 1 B07002PR_004 Estimate!!Median age --!!Total:!!Moved from d… Median… <NA>     \n 2 B07002_004   Estimate!!Median age --!!Total:!!Moved from d… Median… tract    \n 3 B07002_005   Estimate!!Median age --!!Total:!!Moved from d… Median… tract    \n 4 B07011PR_004 Estimate!!Median income in the past 12 months… Median… <NA>     \n 5 B07011_004   Estimate!!Median income in the past 12 months… Median… tract    \n 6 B07011_005   Estimate!!Median income in the past 12 months… Median… tract    \n 7 B07402PR_004 Estimate!!Median age --!!Total living in area… Median… <NA>     \n 8 B07402_004   Estimate!!Median age --!!Total living in area… Median… county   \n 9 B07402_005   Estimate!!Median age --!!Total living in area… Median… county   \n10 B07411PR_004 Estimate!!Median income in the past 12 months… Median… <NA>     \n```\n\n\n:::\n\n```{.r .cell-code}\n# Search excluding certain terms\nincome_not_family <- acs_vars_2022 %>%\n  filter(str_detect(label, \"[Mm]edian.*income\") & \n         !str_detect(label, \"family\"))\n\nprint(\"Income variables (not family income):\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Income variables (not family income):\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(income_not_family)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  name         label                                           concept geography\n  <chr>        <chr>                                           <chr>   <chr>    \n1 B06011PR_001 Estimate!!Median income in the past 12 months … Median… <NA>     \n2 B06011PR_002 Estimate!!Median income in the past 12 months … Median… <NA>     \n3 B06011PR_003 Estimate!!Median income in the past 12 months … Median… <NA>     \n4 B06011PR_004 Estimate!!Median income in the past 12 months … Median… <NA>     \n5 B06011PR_005 Estimate!!Median income in the past 12 months … Median… <NA>     \n6 B06011_001   Estimate!!Median income in the past 12 months … Median… tract    \n```\n\n\n:::\n\n```{.r .cell-code}\n# Case-insensitive search using regex\neducation_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, regex(\"bachelor\", ignore_case = TRUE)))\n\nprint(\"Education variables:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Education variables:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(education_vars, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  name         label                                           concept geography\n  <chr>        <chr>                                           <chr>   <chr>    \n1 B06009PR_005 Estimate!!Total:!!Bachelor's degree             Place … <NA>     \n2 B06009PR_011 Estimate!!Total:!!Born in Puerto Rico:!!Bachel… Place … <NA>     \n3 B06009PR_017 Estimate!!Total:!!Born in the United States:!!… Place … <NA>     \n4 B06009PR_023 Estimate!!Total:!!Native; born elsewhere:!!Bac… Place … <NA>     \n5 B06009PR_029 Estimate!!Total:!!Foreign born:!!Bachelor's de… Place … <NA>     \n```\n\n\n:::\n:::\n\n\n### 0.6 Interactive Exploration\n\n**Your Task:** Use RStudio's viewer for easier searching.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Open the full variable list in RStudio viewer\n# This opens a searchable data table\nif (interactive()) View(acs_vars_2022)\n\n# Pro tip: You can also search specific table groups\n# B01 = Age and Sex\n# B19 = Income  \n# B25 = Housing\ntable_b19 <- acs_vars_2022 %>%\n  filter(str_detect(name, \"^B19\"))  # ^ means \"starts with\"\n\nprint(\"All B19 (Income) table variables:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"All B19 (Income) table variables:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(table_b19, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   name        label                                concept            geography\n   <chr>       <chr>                                <chr>              <chr>    \n 1 B19001A_001 Estimate!!Total:                     Household Income … tract    \n 2 B19001A_002 Estimate!!Total:!!Less than $10,000  Household Income … tract    \n 3 B19001A_003 Estimate!!Total:!!$10,000 to $14,999 Household Income … tract    \n 4 B19001A_004 Estimate!!Total:!!$15,000 to $19,999 Household Income … tract    \n 5 B19001A_005 Estimate!!Total:!!$20,000 to $24,999 Household Income … tract    \n 6 B19001A_006 Estimate!!Total:!!$25,000 to $29,999 Household Income … tract    \n 7 B19001A_007 Estimate!!Total:!!$30,000 to $34,999 Household Income … tract    \n 8 B19001A_008 Estimate!!Total:!!$35,000 to $39,999 Household Income … tract    \n 9 B19001A_009 Estimate!!Total:!!$40,000 to $44,999 Household Income … tract    \n10 B19001A_010 Estimate!!Total:!!$45,000 to $49,999 Household Income … tract    \n```\n\n\n:::\n:::\n\n\n### 0.7 Verify Your Variable Choices\n\n**Your Task:** Test your variables by getting a small sample of data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Test the variables you found\ntest_vars <- c(\n  total_pop = \"B01003_001\",      # Total population\n  median_income = \"B19013_001\",  # Median household income\n  median_age = \"B01002_001\"      # Median age\n)\n\n# Get data for just one state to test\ntest_data <- get_acs(\n  geography = \"state\",\n  variables = test_vars,\n  state = \"PA\",\n  year = 2022\n)\n\n# Check that you got what you expected\ntest_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  GEOID NAME         variable        estimate   moe\n  <chr> <chr>        <chr>              <dbl> <dbl>\n1 42    Pennsylvania median_age          40.8   0.1\n2 42    Pennsylvania total_pop     12989208    NA  \n3 42    Pennsylvania median_income    73170   347  \n```\n\n\n:::\n:::\n\n\n### 0.8 Common Variable Patterns\n\n**Reference guide for future use:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Common patterns to remember:\ncommon_variables <- tribble(\n  ~concept, ~typical_code, ~description,\n  \"Total Population\", \"B01003_001\", \"Total population\",\n  \"Median Age\", \"B01002_001\", \"Median age of population\", \n  \"Median HH Income\", \"B19013_001\", \"Median household income\",\n  \"White Population\", \"B03002_003\", \"White alone population\",\n  \"Black Population\", \"B03002_004\", \"Black/African American alone\",\n  \"Hispanic Population\", \"B03002_012\", \"Hispanic or Latino population\",\n  \"Bachelor's Degree\", \"B15003_022\", \"Bachelor's degree or higher\",\n  \"Median Rent\", \"B25058_001\", \"Median contract rent\",\n  \"Median Home Value\", \"B25077_001\", \"Median value owner-occupied\"\n)\n\nprint(\"Common Census Variables:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Common Census Variables:\"\n```\n\n\n:::\n\n```{.r .cell-code}\ncommon_variables\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n  concept             typical_code description                  \n  <chr>               <chr>        <chr>                        \n1 Total Population    B01003_001   Total population             \n2 Median Age          B01002_001   Median age of population     \n3 Median HH Income    B19013_001   Median household income      \n4 White Population    B03002_003   White alone population       \n5 Black Population    B03002_004   Black/African American alone \n6 Hispanic Population B03002_012   Hispanic or Latino population\n7 Bachelor's Degree   B15003_022   Bachelor's degree or higher  \n8 Median Rent         B25058_001   Median contract rent         \n9 Median Home Value   B25077_001   Median value owner-occupied  \n```\n\n\n:::\n:::\n\n\n**Key Tips for Variable Hunting:**\n\n1.  **Start with concepts** - search for the topic you want (income,\n    age, housing)\n2.  **Look for \"Median\"** vs \"Mean\" - median is usually more\n    policy-relevant\n3.  **Check the universe** - some variables are for \"households,\" others\n    for \"population\"\n4.  **Test with small data** before running large queries\n5.  **Bookmark useful variables** for future projects (type them in your\n    weekly notes!)\n\n## Exercise 1: Single Variable EDA\n\n### 1.1 Load and Inspect Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get county-level data for your state\ncounty_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    total_pop = \"B01003_001\",       # Total population\n    median_income = \"B19013_001\",   # Median household income\n    median_age = \"B01002_001\"       # Median age\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n)\n\n# Clean county names\ncounty_data <- county_data %>%\n  mutate(county_name = str_remove(NAME, paste0(\", Pennsylvania\")))\n\n# Basic inspection\nglimpse(county_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 67\nColumns: 9\n$ GEOID          <chr> \"42001\", \"42003\", \"42005\", \"42007\", \"42009\", \"42011\", \"…\n$ NAME           <chr> \"Adams County, Pennsylvania\", \"Allegheny County, Pennsy…\n$ total_popE     <dbl> 104604, 1245310, 65538, 167629, 47613, 428483, 122640, …\n$ total_popM     <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ median_incomeE <dbl> 78975, 72537, 61011, 67194, 58337, 74617, 59386, 60650,…\n$ median_incomeM <dbl> 3334, 869, 2202, 1531, 2606, 1191, 2058, 2167, 1516, 21…\n$ median_ageE    <dbl> 43.8, 40.6, 47.0, 44.9, 47.3, 39.9, 42.9, 43.9, 44.0, 4…\n$ median_ageM    <dbl> 0.2, 0.1, 0.2, 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, …\n$ county_name    <chr> \"Adams County\", \"Allegheny County\", \"Armstrong County\",…\n```\n\n\n:::\n:::\n\n\n### 1.2 Explore Income Distribution\n\n**Your Task:** Create a histogram of median household income and\ndescribe what you see.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create histogram of median income\nggplot(county_data) +\n  aes(x = median_incomeE) +\n  geom_histogram(bins = 15, fill = \"lightpink\", alpha = 0.5) +\n  labs(\n    title = \"Distribution of Median Household Income\",\n    x = \"Median Household Income ($)\",\n    y = \"Number of Counties\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = dollar)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### 1.3 Box Plot for Outlier Detection\n\n**Your Task:** Create a boxplot to identify specific outlier counties.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Box plot to see outliers clearly\nggplot(county_data) +\n  aes(y = median_incomeE) +\n  geom_boxplot(fill = \"lightpink\", width = 0.5) +\n  labs(\n    title = \"Median Income Distribution with Outliers\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels = dollar)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Identify the outlier counties\nincome_outliers <- county_data %>%\n  mutate(\n    Q1 = quantile(median_incomeE, 0.25, na.rm = TRUE),\n    Q3 = quantile(median_incomeE, 0.75, na.rm = TRUE),\n    IQR = Q3 - Q1,\n    outlier = median_incomeE < (Q1 - 1.5 * IQR) | median_incomeE > (Q3 + 1.5 * IQR)\n  ) %>%\n  filter(outlier) %>%\n  select(county_name, median_incomeE)\n\nprint(\"Outlier counties:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Outlier counties:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nincome_outliers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  county_name       median_incomeE\n  <chr>                      <dbl>\n1 Bucks County              107826\n2 Chester County            118574\n3 Montgomery County         107441\n```\n\n\n:::\n:::\n\n\n### 1.4 Challenge Exercise: Population Distribution\n\n**Your Task:** Create your own visualization of population distribution\nand identify outliers.\n\n**Requirements:**\n\n-   Create a histogram of total population (`total_popE`)\n-   Use a different color than the income example (try \"darkgreen\" or\n    \"purple\")\n-   Add appropriate labels and title\n-   Create a boxplot to identify population outliers\n-   Find and list the 3 most populous and 3 least populous counties\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create histogram of total population\nggplot(county_data) +\n  aes(x = total_popE) +\n  geom_histogram(bins = 15, fill = \"lightpink\", alpha = 0.7) +\n  labs(\n    title = \"Total Population Distribution\",\n    x = \"Population\",\n    y = \"Number of Counties\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels=comma)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Box plot to see outliers clearly\nggplot(county_data) +\n  aes(y = total_popE) +\n  geom_boxplot(fill = \"lightpink\", width = 0.5) +\n  labs(\n    title = \"Total population distribution with Outliers\",\n    y = \"Population\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels=comma)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Identify the outlier counties\npopulation_outliers <- county_data %>%\n  mutate(\n    Q1 = quantile(total_popE, 0.25, na.rm = TRUE),\n    Q3 = quantile(total_popE, 0.75, na.rm = TRUE),\n    IQR = Q3 - Q1,\n    outlier = total_popE < (Q1 - 1.5 * IQR) | total_popE > (Q3 + 1.5 * IQR)\n  ) %>%\n  filter(outlier) %>%\n  select(county_name, total_popE)\n\nprint(\"Outlier counties:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Outlier counties:\"\n```\n\n\n:::\n\n```{.r .cell-code}\npopulation_outliers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 2\n  county_name         total_popE\n  <chr>                    <dbl>\n1 Allegheny County       1245310\n2 Bucks County            645163\n3 Chester County          536474\n4 Delaware County         575312\n5 Lancaster County        553202\n6 Montgomery County       856399\n7 Philadelphia County    1593208\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Exercise 2: Two Variable Relationships\n\n### 2.1 Population vs Income Scatter Plot\n\n**Your Task:** Explore the relationship between population size and\nmedian income.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Basic scatter plot\nggplot(county_data) +\n  aes(x = total_popE, y = median_incomeE) +\n  geom_point() +\n  labs(\n    title = \"Population vs Median Income\",\n    x = \"Total Population\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### 2.2 Add Trend Line and Labels\n\n**Your Task:** Improve the plot by adding a trend line and labeling\ninteresting points.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Enhanced scatter plot with trend line\nggplot(county_data) +\n  aes(x = total_popE, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"lightpink\") +\n  labs(\n    title = \"Population vs Median Income in Pennsylvania Counties\",\n    subtitle = \"2018-2022 ACS 5-Year Estimates\",\n    x = \"Total Population\",\n    y = \"Median Household Income ($)\",\n    caption = \"Source: U.S. Census Bureau\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate correlation\ncorrelation <- cor(county_data$total_popE, county_data$median_incomeE, use = \"complete.obs\")\nprint(paste(\"Correlation coefficient:\", round(correlation, 3)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Correlation coefficient: 0.457\"\n```\n\n\n:::\n:::\n\n\n### 2.3 Deal with Skewed Data\n\n**Your Task:** The population data is highly skewed. Try a log\ntransformation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Log-transformed scatter plot\nggplot(county_data) +\n  aes(x = log(total_popE), y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(\n    title = \"Log(Population) vs Median Income\",\n    x = \"Log(Total Population)\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels = dollar)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n**Question:** Does the log transformation reveal a clearer relationship?\nYes. It's a positive slope, it suggests that more populous counties tend to have higher median household incomes.\n\n### 2.4 Challenge Exercise: Age vs Income Relationship\n\n**Your Task:** Explore the relationship between median age and median\nincome using different visualization techniques.\n\n**Requirements:**\n\n-   Create a scatter plot with median age on x-axis and median income on\n    y-axis\n-   Use red points (`color = \"red\"`) with 50% transparency\n    (`alpha = 0.5`)\n-   Add a smooth trend line using `method = \"loess\"` instead of \"lm\"\n-   Use the \"dark\" theme (`theme_dark()`)\n-   Format the y-axis with dollar signs\n-   Add a title that mentions both variables\n\n::: {.cell}\n\n```{.r .cell-code}\n# Enhanced scatter plot with trend line\nggplot(county_data) +\n  aes(x = median_ageE, y = median_incomeE) +\n  geom_point(alpha = 0.5, color = \"red\") +\n  geom_smooth(method = \"loess\", se = TRUE, color = \"red\") +\n  labs(\n    title = \"Median Age vs Median Income in Pennsylvania Counties\",\n    subtitle = \"2018-2022 ACS 5-Year Estimates\",\n    x = \"Median Age\",\n    y = \"Median Household Income ($)\",\n    caption = \"Source: U.S. Census Bureau\"\n  ) +\n  theme_dark() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate correlation\ncorrelation <- cor(county_data$total_popE, county_data$median_incomeE, use = \"complete.obs\")\nprint(paste(\"Correlation coefficient:\", round(correlation, 3)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Correlation coefficient: 0.457\"\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Exercise 3: Data Quality Visualization \n\n### 3.1 Visualize Margins of Error\n\n**Your Task:** Create a visualization showing how data reliability\nvaries across counties.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate MOE percentages\ncounty_reliability <- county_data %>%\n  mutate(\n    income_moe_pct = (median_incomeM / median_incomeE) * 100,\n    pop_category = case_when(\n      total_popE < 50000 ~ \"Small (<50K)\",\n      total_popE < 200000 ~ \"Medium (50K-200K)\",\n      TRUE ~ \"Large (200K+)\"\n    )\n  )\n\n# MOE by population size\nggplot(county_reliability) +\n  aes(x = total_popE, y = income_moe_pct) +\n  geom_point(alpha = 0.7) +\n  geom_hline(yintercept = 10, color = \"red\", linetype = \"dashed\") +\n  labs(\n    title = \"Data Reliability Decreases with Population Size\",\n    x = \"Total Population\",\n    y = \"Margin of Error (%)\",\n    caption = \"Red line = 10% reliability threshold\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = scales::comma)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n### 3.2 Compare Reliability by County Size\n\n**Your Task:** Use box plots to compare MOE across county size\ncategories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Box plots by population category\nggplot(county_reliability) +\n  aes(x = pop_category, y = income_moe_pct, fill = pop_category) +\n  geom_boxplot() +\n  labs(\n    title = \"Data Reliability by County Size Category\",\n    x = \"Population Category\",\n    y = \"Margin of Error (%)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")  # Remove legend since x-axis is clear\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### 3.3 Challenge Exercise: Age Data Reliability\n\n**Your Task:** Analyze the reliability of median age data across\ncounties.\n\n**Requirements:** \n\n- Calculate MOE percentage for median age\n(`median_ageM / median_ageE * 100`) \n- Create a scatter plot showing\npopulation vs age MOE percentage \n- Use purple points\n(`color = \"purple\"`) with size = 2 \n- Add a horizontal line at 5% MOE\nusing `geom_hline()` with a blue dashed line \n- Use `theme_classic()`instead of `theme_minimal()` \n- Create a boxplot comparing age MOE across the three population categories\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate MOE percentages\ncounty_reliability <- county_data %>%\n  mutate(\n    age_moe_pct = (median_ageM / median_ageE) * 100,\n    pop_category = case_when(\n      median_ageE < 40 ~ \"Small (<40)\",\n      median_ageE < 50 ~ \"Medium (40-50)\",\n      TRUE ~ \"Large (>50)\"\n    )\n  )\n\n# MOE by population size\nggplot(county_reliability) +\n  aes(x = median_ageE, y = age_moe_pct) +\n  geom_point(alpha = 0.7, color = \"purple\",size = 2) +\n  geom_hline(yintercept = 5, color = \"blue\", linetype = \"dashed\",size = 0.5 ) +\n  labs(\n    title = \"Data Reliability of median age data across\ncounties.\",\n    x = \"Median Age\",\n    y = \"Margin of Error (%)\",\n    caption = \"Red line = 5% reliability threshold\"\n  ) +\n  theme_classic() +\n  scale_x_continuous(labels = comma)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Box plots by population category\nggplot(county_reliability) +\n  aes(x = pop_category, y = age_moe_pct, fill = pop_category) +\n  geom_boxplot() +\n  labs(\n    title = \"age MOE across the three population categories\",\n    x = \"Population Category\",\n    y = \"Margin of Error (%)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")  # Remove legend since x-axis is clear\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Exercise 4: Multiple Variables with Color and Faceting \n\n### 4.1 Three-Variable Scatter Plot\n\n**Your Task:** Add median age as a color dimension to the\npopulation-income relationship.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Three-variable scatter plot\nggplot(county_data) +\n  aes(x = total_popE, y = median_incomeE, color = median_ageE) +\n  geom_point(size = 2, alpha = 0.7) +\n  scale_color_viridis_c(name = \"Median\\nAge\") +\n  labs(\n    title = \"Population, Income, and Age Patterns\",\n    x = \"Total Population\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n### 4.2 Create Categories for Faceting\n\n**Your Task:** Create age categories and use faceting to compare\npatterns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create age categories and faceted plot\ncounty_faceted <- county_data %>%\n  mutate(\n    age_category = case_when(\n      median_ageE < 40 ~ \"Young (< 40)\",\n      median_ageE < 45 ~ \"Middle-aged (40-45)\",\n      TRUE ~ \"Older (45+)\"\n    )\n  )\n\nggplot(county_faceted) +\n  aes(x = total_popE, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~age_category) +\n  labs(\n    title = \"Population-Income Relationship by Age Profile\",\n    x = \"Total Population\",\n    y = \"Median Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n**Question:** Do the relationships between population and income differ\nby age profile?\nYes\n\n**Your Task:** Create a visualization using income categories and multiple aesthetic mappings.\n\n**Requirements:** \n\n- Create income categories: \"Low\" (\\<\\$50k), \"Middle\"\n(\\$50k-\\$80k), \"High\" (\\>\\$80k) \n- Make a scatter plot with population (x) vs median age (y) - Color points by income category \n- Size points by the margin of error for income (`median_incomeM`) \n- Use the \"Set2\" color palette: `scale_color_brewer(palette = \"Set2\")` **note: you'll need to load the `RColorBrewer` package for this`\n- Facet by income category using `facet_wrap()` \n- Use `theme_bw()` theme\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create income categories\ncounty_income_plot <- county_data %>%\n  mutate(\n    income_cat = case_when(\n      median_incomeE < 50000 ~ \"Low (<$50K)\",\n      median_incomeE < 80000 ~ \"Middle ($50K–$80K)\",\n      TRUE ~ \"High (>$80K)\"\n    )\n  )\n\n# Scatter plot\nggplot(county_income_plot) +\n  aes(\n    x = total_popE,\n    y = median_ageE,\n    color = income_cat,\n    size = median_incomeM\n  ) +\n  geom_point(alpha = 0.7) +\n  scale_color_brewer(palette = \"Set2\", name = \"Income Category\") +\n  scale_size_continuous(name = \"Income MOE\") +\n  labs(\n    title = \"Population vs Median Age by Income Category\",\n    x = \"Total Population\",\n    y = \"Median Age\"\n  ) +\n  facet_wrap(~ income_cat) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  scale_x_continuous(labels = scales::comma)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<ScaleContinuousPosition>\n Range:  \n Limits:    0 --    1\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Exercise 5: Data Joins and Integration \n\n### 5.1 Get Additional Census Data\n\n**Your Task:** Load educational attainment data and join it with our\nexisting data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get educational attainment data\neducation_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    total_25plus = \"B15003_001\",    # Total population 25 years and over\n    bachelor_plus = \"B15003_022\"    # Bachelor's degree or higher\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n) %>%\n  mutate(\n    pct_college = (bachelor_plusE / total_25plusE) * 100,\n    county_name = str_remove(NAME, paste0(\", \", state_choice))\n  ) %>%\n  select(GEOID, county_name, pct_college)\n\n# Check the data\nhead(education_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  GEOID county_name                    pct_college\n  <chr> <chr>                                <dbl>\n1 42001 Adams County, Pennsylvania           13.9 \n2 42003 Allegheny County, Pennsylvania       25.4 \n3 42005 Armstrong County, Pennsylvania       12.7 \n4 42007 Beaver County, Pennsylvania          18.3 \n5 42009 Bedford County, Pennsylvania          9.73\n6 42011 Berks County, Pennsylvania           17.2 \n```\n\n\n:::\n:::\n\n\n### 5.2 Join the Datasets\n\n**Your Task:** Join the education data with our main county dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform the join\ncombined_data <- county_data %>%\n  left_join(education_data, by = \"GEOID\")\n\n# Check the join worked\ncat(\"Original data rows:\", nrow(county_data), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOriginal data rows: 67 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Combined data rows:\", nrow(combined_data), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCombined data rows: 67 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Missing education data:\", sum(is.na(combined_data$pct_college)), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMissing education data: 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# View the combined data\nhead(combined_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 11\n  GEOID NAME     total_popE total_popM median_incomeE median_incomeM median_ageE\n  <chr> <chr>         <dbl>      <dbl>          <dbl>          <dbl>       <dbl>\n1 42001 Adams C…     104604         NA          78975           3334        43.8\n2 42003 Alleghe…    1245310         NA          72537            869        40.6\n3 42005 Armstro…      65538         NA          61011           2202        47  \n4 42007 Beaver …     167629         NA          67194           1531        44.9\n5 42009 Bedford…      47613         NA          58337           2606        47.3\n6 42011 Berks C…     428483         NA          74617           1191        39.9\n# ℹ 4 more variables: median_ageM <dbl>, county_name.x <chr>,\n#   county_name.y <chr>, pct_college <dbl>\n```\n\n\n:::\n:::\n\n\n### 5.3 Analyze the New Relationship\n\n**Your Task:** Explore the relationship between education and income.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Education vs Income scatter plot\nggplot(combined_data) +\n  aes(x = pct_college, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(\n    title = \"Education vs Income Across Counties\",\n    x = \"Percent with Bachelor's Degree or Higher\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels = dollar)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate correlation\nedu_income_cor <- cor(combined_data$pct_college, combined_data$median_incomeE, use = \"complete.obs\")\nprint(paste(\"Education-Income Correlation:\", round(edu_income_cor, 3)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Education-Income Correlation: 0.811\"\n```\n\n\n:::\n:::\n\n\n### 5.4 Get Housing Data and Triple Join\n\n**Your Task:** Add housing cost data to create a three-way analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get housing cost data\nhousing_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    median_rent = \"B25058_001\",     # Median contract rent\n    median_home_value = \"B25077_001\" # Median value of owner-occupied units\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n) %>%\n  select(GEOID, median_rent = median_rentE, median_home_value = median_home_valueE)\n\n# Join all three datasets\nfull_data <- combined_data %>%\n  left_join(housing_data, by = \"GEOID\")\n\n# Create a housing affordability measure\nfull_data <- full_data %>%\n  mutate(\n    rent_to_income = (median_rent * 12) / median_incomeE * 100,\n    income_category = case_when(\n      median_incomeE < 50000 ~ \"Low Income\",\n      median_incomeE < 80000 ~ \"Middle Income\",\n      TRUE ~ \"High Income\"\n    )\n  )\nhead(full_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 15\n  GEOID NAME     total_popE total_popM median_incomeE median_incomeM median_ageE\n  <chr> <chr>         <dbl>      <dbl>          <dbl>          <dbl>       <dbl>\n1 42001 Adams C…     104604         NA          78975           3334        43.8\n2 42003 Alleghe…    1245310         NA          72537            869        40.6\n3 42005 Armstro…      65538         NA          61011           2202        47  \n4 42007 Beaver …     167629         NA          67194           1531        44.9\n5 42009 Bedford…      47613         NA          58337           2606        47.3\n6 42011 Berks C…     428483         NA          74617           1191        39.9\n# ℹ 8 more variables: median_ageM <dbl>, county_name.x <chr>,\n#   county_name.y <chr>, pct_college <dbl>, median_rent <dbl>,\n#   median_home_value <dbl>, rent_to_income <dbl>, income_category <chr>\n```\n\n\n:::\n:::\n\n\n### 5.5 Advanced Multi-Variable Analysis\n\n**Your Task:** Create a comprehensive visualization showing multiple\nrelationships.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Complex multi-variable plot\nggplot(full_data) +\n  aes(x = pct_college, y = rent_to_income, \n      color = income_category, size = total_popE) +\n  geom_point(alpha = 0.7) +\n  labs(\n    title = \"Education, Housing Affordability, and Income Patterns\",\n    subtitle = \"Larger points = larger population\",\n    x = \"Percent with Bachelor's Degree or Higher\",\n    y = \"Annual Rent as % of Median Income\",\n    color = \"Income Category\",\n    size = \"Population\"\n  ) +\n  theme_minimal() +\n  guides(size = guide_legend(override.aes = list(alpha = 1)))\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n## Exercise 6: Publication-Ready Visualization\n\n### 6.1 Create a Policy-Focused Visualization\n\n**Your Task:** Combine multiple visualizations to tell a more complete story about county characteristics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a multi-panel figure\nlibrary(patchwork)  # For combining plots\n\n# Plot 1: Income distribution\np1 <- ggplot(full_data) +\n  aes(x = median_incomeE) +\n  geom_histogram(bins = 15, fill = \"steelblue\", alpha = 0.7) +\n  labs(title = \"A) Income Distribution\", \n       x = \"Median Income ($)\", y = \"Counties\") +\n  scale_x_continuous(labels = dollar) +\n  theme_minimal()\n\n# Plot 2: Education vs Income\np2 <- ggplot(full_data) +\n  aes(x = pct_college, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(title = \"B) Education vs Income\",\n       x = \"% College Educated\", y = \"Median Income ($)\") +\n  scale_y_continuous(labels = dollar) +\n  theme_minimal()\n\n# Plot 3: Housing affordability by income category\np3 <- ggplot(full_data) +\n  aes(x = income_category, y = rent_to_income, fill = income_category) +\n  geom_boxplot() +\n  labs(title = \"C) Housing Affordability by Income\",\n       x = \"Income Category\", y = \"Rent as % of Income\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n# Plot 4: Data reliability by population\np4 <- ggplot(\n  county_data %>%\n    mutate(income_moe_pct = (median_incomeM / median_incomeE) * 100)\n) +\n  aes(x = total_popE, y = income_moe_pct) +\n  geom_point(alpha = 0.7) +\n  geom_hline(yintercept = 10, color = \"red\", linetype = \"dashed\") +\n  labs(title = \"D) Data Reliability\",\n       x = \"Population\", y = \"MOE (%)\") +\n  scale_x_continuous(labels = comma) +\n  theme_minimal()\n\n\n# Combine all plots\ncombined_plot <- (p1 | p2) / (p3 | p4)\ncombined_plot + plot_annotation(\n  title = \"Pennsylvania County Analysis: Income, Education, and Housing Patterns\",\n  caption = \"Source: American Community Survey 2018-2022\"\n)\n```\n\n::: {.cell-output-display}\n![](week3_lab_exercise_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n## Exercise 7: Ethical Data Communication - Implementing Research Recommendations\n\n**Background:** Research by Jurjevich et al. (2018) found that only 27%\nof planners warn users about unreliable ACS data, violating AICP ethical\nstandards. In this exercise, you'll practice the five research-based\nguidelines for ethical ACS data communication.\n\n### 7.1 Create Professional Data Tables with Uncertainty\n\n**Your Task:** Follow the Jurjevich et al. guidelines to create an\nethical data presentation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get comprehensive data for ethical analysis\nethical_demo_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    median_income = \"B19013_001\",   # Median household income\n    total_25plus = \"B15003_001\",    # Total population 25 years and over\n    bachelor_plus = \"B15003_022\",   # Bachelor's degree or higher\n    total_pop = \"B01003_001\"        # Total population\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n) %>%\n  mutate(\n    # Calculate derived statistics\n    pct_college = (bachelor_plusE / total_25plusE) * 100,\n    \n    # Calculate MOE for percentage using error propagation\n    pct_college_moe = pct_college * sqrt((bachelor_plusM/bachelor_plusE)^2 + (total_25plusM/total_25plusE)^2),\n    \n    # Calculate coefficient of variation for all key variables\n    income_cv = (median_incomeM / median_incomeE) * 100,\n    education_cv = (pct_college_moe / pct_college) * 100,\n    \n    # Create reliability categories based on CV\n    income_reliability = case_when(\n      income_cv < 12 ~ \"High\",\n      income_cv <= 40 ~ \"Moderate\", \n      TRUE ~ \"Low\"\n    ),\n    \n    education_reliability = case_when(\n      education_cv < 12 ~ \"High\",\n      education_cv <= 40 ~ \"Moderate\",\n      TRUE ~ \"Low\"\n    ),\n    \n    # Create color coding for reliability\n    income_color = case_when(\n      income_reliability == \"High\" ~ \"🟢\",\n      income_reliability == \"Moderate\" ~ \"🟡\",\n      TRUE ~ \"🔴\"\n    ),\n    \n    education_color = case_when(\n      education_reliability == \"High\" ~ \"🟢\",\n      education_reliability == \"Moderate\" ~ \"🟡\", \n      TRUE ~ \"🔴\"\n    ),\n    \n    # Clean county names\n    county_name = str_remove(NAME, paste0(\", \", state_choice))\n  )\n\n# Create ethical data table focusing on least reliable estimates\nethical_data_table <- ethical_demo_data %>%\n  select(county_name, median_incomeE, median_incomeM, income_cv, income_color,\n         pct_college, pct_college_moe, education_cv, education_color) %>%\n  arrange(desc(income_cv)) %>%  # Show least reliable first\n  slice_head(n = 10)\n\n# Create professional table following guidelines\nlibrary(knitr)\nlibrary(kableExtra)\n\nethical_data_table %>%\n  select(county_name, median_incomeE, median_incomeM, income_cv, income_color) %>%\n  kable(\n    col.names = c(\"County\", \"Median Income\", \"Margin of Error\", \n                  \"CV (%)\", \"Reliability\"),\n    caption = \"Pennsylvania Counties: Median Household Income with Statistical Uncertainty\",\n    format.args = list(big.mark = \",\")\n  ) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\")) %>%\n  footnote(\n    general = c(\"Coefficient of Variation (CV) indicates reliability:\",\n                \"🟢 High reliability (CV < 12%)\",\n                \"🟡 Moderate reliability (CV 12-40%)\", \n                \"🔴 Low reliability (CV > 40%)\",\n                \"Following Jurjevich et al. (2018) research recommendations\",\n                \"Source: American Community Survey 2018-2022 5-Year Estimates\"),\n    general_title = \"Notes:\"\n  )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;border-bottom: 0;\">\n<caption>Pennsylvania Counties: Median Household Income with Statistical Uncertainty</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> County </th>\n   <th style=\"text-align:right;\"> Median Income </th>\n   <th style=\"text-align:right;\"> Margin of Error </th>\n   <th style=\"text-align:right;\"> CV (%) </th>\n   <th style=\"text-align:left;\"> Reliability </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Forest County, Pennsylvania </td>\n   <td style=\"text-align:right;\"> 46,188 </td>\n   <td style=\"text-align:right;\"> 4,612 </td>\n   <td style=\"text-align:right;\"> 9.985278 </td>\n   <td style=\"text-align:left;\"> 🟢          | </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sullivan County, Pennsylvania </td>\n   <td style=\"text-align:right;\"> 62,910 </td>\n   <td style=\"text-align:right;\"> 5,821 </td>\n   <td style=\"text-align:right;\"> 9.252901 </td>\n   <td style=\"text-align:left;\"> 🟢          | </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Union County, Pennsylvania </td>\n   <td style=\"text-align:right;\"> 64,914 </td>\n   <td style=\"text-align:right;\"> 4,753 </td>\n   <td style=\"text-align:right;\"> 7.321995 </td>\n   <td style=\"text-align:left;\"> 🟢          | </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Montour County, Pennsylvania </td>\n   <td style=\"text-align:right;\"> 72,626 </td>\n   <td style=\"text-align:right;\"> 5,146 </td>\n   <td style=\"text-align:right;\"> 7.085617 </td>\n   <td style=\"text-align:left;\"> 🟢          | </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Elk County, Pennsylvania </td>\n   <td style=\"text-align:right;\"> 61,672 </td>\n   <td style=\"text-align:right;\"> 4,091 </td>\n   <td style=\"text-align:right;\"> 6.633480 </td>\n   <td style=\"text-align:left;\"> 🟢          | </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Greene County, Pennsylvania </td>\n   <td style=\"text-align:right;\"> 66,283 </td>\n   <td style=\"text-align:right;\"> 4,247 </td>\n   <td style=\"text-align:right;\"> 6.407374 </td>\n   <td style=\"text-align:left;\"> 🟢          | </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Cameron County, Pennsylvania </td>\n   <td style=\"text-align:right;\"> 46,186 </td>\n   <td style=\"text-align:right;\"> 2,605 </td>\n   <td style=\"text-align:right;\"> 5.640237 </td>\n   <td style=\"text-align:left;\"> 🟢          | </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Snyder County, Pennsylvania </td>\n   <td style=\"text-align:right;\"> 65,914 </td>\n   <td style=\"text-align:right;\"> 3,666 </td>\n   <td style=\"text-align:right;\"> 5.561793 </td>\n   <td style=\"text-align:left;\"> 🟢          | </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Carbon County, Pennsylvania </td>\n   <td style=\"text-align:right;\"> 64,538 </td>\n   <td style=\"text-align:right;\"> 3,424 </td>\n   <td style=\"text-align:right;\"> 5.305402 </td>\n   <td style=\"text-align:left;\"> 🟢          | </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Warren County, Pennsylvania </td>\n   <td style=\"text-align:right;\"> 57,925 </td>\n   <td style=\"text-align:right;\"> 3,005 </td>\n   <td style=\"text-align:right;\"> 5.187743 </td>\n   <td style=\"text-align:left;\"> 🟢          | </td>\n  </tr>\n</tbody>\n<tfoot>\n<tr><td style=\"padding: 0; \" colspan=\"100%\"><span style=\"font-style: italic;\">Notes:</span></td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> Coefficient of Variation (CV) indicates reliability:</td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> 🟢 High reliability (CV &lt; 12%)</td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> 🟡 Moderate reliability (CV 12-40%)</td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> 🔴 Low reliability (CV &gt; 40%)</td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> Following Jurjevich et al. (2018) research recommendations</td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> Source: American Community Survey 2018-2022 5-Year Estimates</td></tr>\n</tfoot>\n</table>\n\n`````\n:::\n:::\n\n\n### 7.3 Now try Census Tracts\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get census tract poverty data for Philadelphia\nphilly_poverty <- get_acs(\n    geography = \"tract\",\n    variables = c(\n      poverty_pop = \"B17001_001\",     \n      poverty_below = \"B17001_002\"    \n    ),\n    state = \"PA\",\n    county = \"101\",\n    year = 2022,\n    output = \"wide\"\n  ) %>%\n  filter(poverty_popE > 0) %>%  # Remove tracts with no poverty data\n  mutate(\n    # Calculate poverty rate and its MOE\n    poverty_rate = (poverty_belowE / poverty_popE) * 100,\n    \n    # MOE for derived percentage using error propagation\n    poverty_rate_moe = poverty_rate * sqrt((poverty_belowM/poverty_belowE)^2 + (poverty_popM/poverty_popE)^2),\n    \n    # Coefficient of variation\n    poverty_cv = (poverty_rate_moe / poverty_rate) * 100,\n    \n    # Reliability assessment\n    reliability = case_when(\n      poverty_cv < 12 ~ \"High\",\n      poverty_cv <= 40 ~ \"Moderate\",\n      poverty_cv <= 75 ~ \"Low\",\n      TRUE ~ \"Very Low\"\n    ),\n    \n    # Color coding\n    reliability_color = case_when(\n      reliability == \"High\" ~ \"🟢\",\n      reliability == \"Moderate\" ~ \"🟡\",\n      reliability == \"Low\" ~ \"🟠\",\n      TRUE ~ \"🔴\"\n    ),\n    \n    # Population size categories\n    pop_category = case_when(\n      poverty_popE < 500 ~ \"Very Small (<500)\",\n      poverty_popE < 1000 ~ \"Small (500-1000)\",\n      poverty_popE < 1500 ~ \"Medium (1000-1500)\",\n      TRUE ~ \"Large (1500+)\"\n    )\n  )\n\n# Check the data quality crisis at tracts\nreliability_summary <- philly_poverty %>%\n  count(reliability) %>%\n  mutate(\n    percentage = round(n / sum(n) * 100, 1),\n    total_bg = sum(n)\n  )\n\nprint(\"Philadelphia Census Tract Poverty Data Reliability:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Philadelphia Census Tract Poverty Data Reliability:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nreliability_summary %>%\n  kable(\n    col.names = c(\"Data Quality\", \"Number of Tracts\", \"Percentage\", \"Total\"),\n    caption = \"The Data Quality Crisis: Philadelphia Census Tract Poverty Estimates\"\n  ) %>%\n  kable_styling()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n<caption>The Data Quality Crisis: Philadelphia Census Tract Poverty Estimates</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Data Quality </th>\n   <th style=\"text-align:right;\"> Number of Tracts </th>\n   <th style=\"text-align:right;\"> Percentage </th>\n   <th style=\"text-align:right;\"> Total </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Low </td>\n   <td style=\"text-align:right;\"> 295 </td>\n   <td style=\"text-align:right;\"> 75.8 </td>\n   <td style=\"text-align:right;\"> 389 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 53 </td>\n   <td style=\"text-align:right;\"> 13.6 </td>\n   <td style=\"text-align:right;\"> 389 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Very Low </td>\n   <td style=\"text-align:right;\"> 41 </td>\n   <td style=\"text-align:right;\"> 10.5 </td>\n   <td style=\"text-align:right;\"> 389 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Show the most problematic estimates (following Guideline 3: provide context)\nworst_estimates <- philly_poverty %>%\n  filter(reliability %in% c(\"Low\", \"Very Low\")) %>%\n  arrange(desc(poverty_cv)) %>%\n  slice_head(n = 10)\n\nworst_estimates %>%\n  select(GEOID, poverty_rate, poverty_rate_moe, poverty_cv, reliability_color, poverty_popE) %>%\n  kable(\n    col.names = c(\"Tract\", \"Poverty Rate (%)\", \"MOE\", \"CV (%)\", \"Quality\", \"Pop Size\"),\n    caption = \"Guideline 3: Tracts with Least Reliable Poverty Estimates\",\n    digits = c(0, 1, 1, 1, 0, 0)\n  ) %>%\n  kable_styling() %>%\n  footnote(\n    general = c(\"These estimates should NOT be used for policy decisions\",\n                \"CV > 75% indicates very low reliability\",\n                \"Recommend aggregation or alternative data sources\")\n  )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;border-bottom: 0;\">\n<caption>Guideline 3: Tracts with Least Reliable Poverty Estimates</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Tract </th>\n   <th style=\"text-align:right;\"> Poverty Rate (%) </th>\n   <th style=\"text-align:right;\"> MOE </th>\n   <th style=\"text-align:right;\"> CV (%) </th>\n   <th style=\"text-align:left;\"> Quality </th>\n   <th style=\"text-align:right;\"> Pop Size </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 42101989100 </td>\n   <td style=\"text-align:right;\"> 15.8 </td>\n   <td style=\"text-align:right;\"> 45.2 </td>\n   <td style=\"text-align:right;\"> 286.1 </td>\n   <td style=\"text-align:left;\"> 🔴      | </td>\n   <td style=\"text-align:right;\"> 38| </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 42101000101 </td>\n   <td style=\"text-align:right;\"> 0.7 </td>\n   <td style=\"text-align:right;\"> 1.1 </td>\n   <td style=\"text-align:right;\"> 157.9 </td>\n   <td style=\"text-align:left;\"> 🔴      | </td>\n   <td style=\"text-align:right;\"> 1947| </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 42101980200 </td>\n   <td style=\"text-align:right;\"> 37.9 </td>\n   <td style=\"text-align:right;\"> 45.2 </td>\n   <td style=\"text-align:right;\"> 119.4 </td>\n   <td style=\"text-align:left;\"> 🔴      | </td>\n   <td style=\"text-align:right;\"> 66| </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 42101023100 </td>\n   <td style=\"text-align:right;\"> 3.8 </td>\n   <td style=\"text-align:right;\"> 4.5 </td>\n   <td style=\"text-align:right;\"> 119.4 </td>\n   <td style=\"text-align:left;\"> 🔴      | </td>\n   <td style=\"text-align:right;\"> 1573| </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 42101025600 </td>\n   <td style=\"text-align:right;\"> 1.7 </td>\n   <td style=\"text-align:right;\"> 2.0 </td>\n   <td style=\"text-align:right;\"> 114.2 </td>\n   <td style=\"text-align:left;\"> 🔴      | </td>\n   <td style=\"text-align:right;\"> 2642| </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 42101014202 </td>\n   <td style=\"text-align:right;\"> 1.7 </td>\n   <td style=\"text-align:right;\"> 1.8 </td>\n   <td style=\"text-align:right;\"> 107.0 </td>\n   <td style=\"text-align:left;\"> 🔴      | </td>\n   <td style=\"text-align:right;\"> 2273| </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 42101000403 </td>\n   <td style=\"text-align:right;\"> 6.6 </td>\n   <td style=\"text-align:right;\"> 6.7 </td>\n   <td style=\"text-align:right;\"> 101.8 </td>\n   <td style=\"text-align:left;\"> 🔴      | </td>\n   <td style=\"text-align:right;\"> 1047| </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 42101026100 </td>\n   <td style=\"text-align:right;\"> 4.7 </td>\n   <td style=\"text-align:right;\"> 4.4 </td>\n   <td style=\"text-align:right;\"> 95.0 </td>\n   <td style=\"text-align:left;\"> 🔴      | </td>\n   <td style=\"text-align:right;\"> 2842| </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 42101036502 </td>\n   <td style=\"text-align:right;\"> 4.9 </td>\n   <td style=\"text-align:right;\"> 4.7 </td>\n   <td style=\"text-align:right;\"> 94.9 </td>\n   <td style=\"text-align:left;\"> 🔴      | </td>\n   <td style=\"text-align:right;\"> 4284| </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 42101032000 </td>\n   <td style=\"text-align:right;\"> 21.8 </td>\n   <td style=\"text-align:right;\"> 20.6 </td>\n   <td style=\"text-align:right;\"> 94.8 </td>\n   <td style=\"text-align:left;\"> 🔴      | </td>\n   <td style=\"text-align:right;\"> 7873| </td>\n  </tr>\n</tbody>\n<tfoot>\n<tr><td style=\"padding: 0; \" colspan=\"100%\"><span style=\"font-style: italic;\">Note: </span></td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> These estimates should NOT be used for policy decisions</td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> CV &gt; 75% indicates very low reliability</td></tr>\n<tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> Recommend aggregation or alternative data sources</td></tr>\n</tfoot>\n</table>\n\n`````\n:::\n:::\n\n\n## Key References and Acknowledgments\n\nJurjevich, J. R., Griffin, A. L., Spielman, S. E., Folch, D. C.,\nMerrick, M., & Nagle, N. N. (2018). Navigating statistical uncertainty:\nHow urban and regional planners understand and work with American\ncommunity survey (ACS) data for guiding policy. *Journal of the American\nPlanning Association*, *84*(2), 112-126.\n\nWalker, K. (2023). *Analyzing US Census Data: Methods, Maps, and Models\nin R*. Available at: https://walker-data.com/census-r/\n\n**AI Acknowledgments:** This lab was developed with coding assistance\nfrom Claude AI. I have run, reviewed, and edited the final version. Any\nremaining errors are my own.\n",
    "supporting": [
      "week3_lab_exercise_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}