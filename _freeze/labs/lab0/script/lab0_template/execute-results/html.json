{
  "hash": "1ca7454f914892123cdd9e43f8fa559d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 0: Getting Started with dplyr\"\nsubtitle: \"Your First Data Analysis\"\nauthor: \"Your Name Here\"\ndate: today\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\nexecute:\n  warning: false\n  message: false\n---\n\n# Overview\n\nWelcome to your first lab! In this (not graded) assignment, you'll practice the fundamental dplyr operations I overviewed in class using car sales data. This lab will help you get comfortable with:\n\n- Basic data exploration\n- Column selection and manipulation  \n- Creating new variables\n- Filtering data\n- Grouping and summarizing\n\n**Instructions:** Copy this template into your portfolio repository under a `lab_0/` folder, then complete each section with your code and answers. You will write the code under the comment section in each chunk.\nBe sure to also copy the data folder into your `lab_0` folder.\n\n# Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the tidyverse library\nlibrary(tidyverse)\n\n# Read in the car sales data\n# Make sure the data file is in your lab_0/data/ folder\ncar_data <- read_csv(\"data/car_sales_data.csv\")\n```\n:::\n\n\n# Exercise 1: Getting to Know Your Data\n\n## 1.1 Data Structure Exploration\n\nExplore the structure of your data and answer these questions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use glimpse() to see the data structure\nglimpse(car_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 50,000\nColumns: 7\n$ Manufacturer          <chr> \"Ford\", \"Porsche\", \"Ford\", \"Toyota\", \"VW\", \"Ford…\n$ Model                 <chr> \"Fiesta\", \"718 Cayman\", \"Mondeo\", \"RAV4\", \"Polo\"…\n$ `Engine size`         <dbl> 1.0, 4.0, 1.6, 1.8, 1.0, 1.4, 1.8, 1.4, 1.2, 2.0…\n$ `Fuel type`           <chr> \"Petrol\", \"Petrol\", \"Diesel\", \"Hybrid\", \"Petrol\"…\n$ `Year of manufacture` <dbl> 2002, 2016, 2014, 1988, 2006, 2018, 2010, 2015, …\n$ Mileage               <dbl> 127300, 57850, 39190, 210814, 127869, 33603, 866…\n$ Price                 <dbl> 3074, 49704, 24072, 1705, 4101, 29204, 14350, 30…\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check the column names\nnames(car_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Manufacturer\"        \"Model\"               \"Engine size\"        \n[4] \"Fuel type\"           \"Year of manufacture\" \"Mileage\"            \n[7] \"Price\"              \n```\n\n\n:::\n\n```{.r .cell-code}\n# Look at the first few rows\nhead(car_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  Manufacturer Model     `Engine size` `Fuel type` `Year of manufacture` Mileage\n  <chr>        <chr>             <dbl> <chr>                       <dbl>   <dbl>\n1 Ford         Fiesta              1   Petrol                       2002  127300\n2 Porsche      718 Caym…           4   Petrol                       2016   57850\n3 Ford         Mondeo              1.6 Diesel                       2014   39190\n4 Toyota       RAV4                1.8 Hybrid                       1988  210814\n5 VW           Polo                1   Petrol                       2006  127869\n6 Ford         Focus               1.4 Petrol                       2018   33603\n# ℹ 1 more variable: Price <dbl>\n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n- How many rows and columns does the dataset have?\n- What types of variables do you see (numeric, character, etc.)?\n- Are there any column names that might cause problems? Why?\n\n**Your answers:**\n- Rows: 50,000\n- Columns:7\n- Variable types: character\n- Problematic names: \n\n## 1.2 Tibble vs Data Frame\n\nCompare how tibbles and data frames display:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Look at the tibble version (what we have)\ncar_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50,000 × 7\n   Manufacturer Model    `Engine size` `Fuel type` `Year of manufacture` Mileage\n   <chr>        <chr>            <dbl> <chr>                       <dbl>   <dbl>\n 1 Ford         Fiesta             1   Petrol                       2002  127300\n 2 Porsche      718 Cay…           4   Petrol                       2016   57850\n 3 Ford         Mondeo             1.6 Diesel                       2014   39190\n 4 Toyota       RAV4               1.8 Hybrid                       1988  210814\n 5 VW           Polo               1   Petrol                       2006  127869\n 6 Ford         Focus              1.4 Petrol                       2018   33603\n 7 Ford         Mondeo             1.8 Diesel                       2010   86686\n 8 Toyota       Prius              1.4 Hybrid                       2015   30663\n 9 VW           Polo               1.2 Petrol                       2012   73470\n10 Ford         Focus              2   Diesel                       1992  262514\n# ℹ 49,990 more rows\n# ℹ 1 more variable: Price <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Convert to regular data frame and display\ncar_df <- as.data.frame(car_data)\n#car_df\n```\n:::\n\n\n**Question:** What differences do you notice in how they print?\n\n**Your answer:** [YOUR ANSWER]\n\n# Exercise 2: Basic Column Operations\n\n## 2.1 Selecting Columns\n\nPractice selecting different combinations of columns:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select just Model and Mileage columns\n\n\n# Select Manufacturer, Price, and Fuel type\n\n\n# Challenge: Select all columns EXCEPT Engine Size\n```\n:::\n\n\n## 2.2 Renaming Columns\n\nLet's fix a problematic column name:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Rename 'Year of manufacture' to year\n\n\n# Check that it worked\nnames(car_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Manufacturer\"        \"Model\"               \"Engine size\"        \n[4] \"Fuel type\"           \"Year of manufacture\" \"Mileage\"            \n[7] \"Price\"              \n```\n\n\n:::\n:::\n\n\n**Question:** Why did we need backticks around `Year of manufacture` but not around `year`?\n\n**Your answer:** [YOUR ANSWER]\n\n# Exercise 3: Creating New Columns\n\n## 3.1 Calculate Car Age\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create an 'age' column (2025 minus year of manufacture)\n\n\n# Create a mileage_per_year column  \n\n\n# Look at your new columns\n#select(car_data, Model, year, age, Mileage, mileage_per_year)\n```\n:::\n\n\n## 3.2 Categorize Cars\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a price_category column where if price is < 15000, its is coded as budget, between 15000 and 30000 is midrange and greater than 30000 is mid-range (use case_when)\n\n\n# Check your categories select the new column and show it\n```\n:::\n\n\n# Exercise 4: Filtering Practice\n\n## 4.1 Basic Filtering\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find all Toyota cars\n\n\n# Find cars with mileage less than 30,000\n\n\n# Find luxury cars (from price category) with low mileage\n```\n:::\n\n\n## 4.2 Multiple Conditions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find cars that are EITHER Honda OR Nissan\n\n\n# Find cars with price between $20,000 and $35,000\n\n\n# Find diesel cars less than 10 years old\n```\n:::\n\n\n**Question:** How many diesel cars are less than 10 years old?\n\n**Your answer:** [YOUR ANSWER]\n\n# Exercise 5: Grouping and Summarizing\n\n## 5.1 Basic Summaries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate average price by manufacturer\navg_price_by_brand <- car_data %>%\n  group_by(Manufacturer) %>%\n  summarize(avg_price = mean(Price, na.rm = TRUE))\n\navg_price_by_brand\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  Manufacturer avg_price\n  <chr>            <dbl>\n1 BMW             24429.\n2 Ford            10672.\n3 Porsche         29104.\n4 Toyota          14340.\n5 VW              10363.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate average mileage by fuel type\n\n\n# Count cars by manufacturer\n```\n:::\n\n\n## 5.2 Categorical Summaries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Frequency table for price categories\n```\n:::\n\n\n\n# Submission Notes\n\n**To submit this lab:**\n1. Make sure your code runs without errors\n2. Fill in all the \"[YOUR ANSWER]\" sections and complete all of the empty code! \n3. Save this file in your portfolio's `lab_0/` folder\n4. Commit and push to GitHub\n5. Check that it appears on your GitHub Pages portfolio site\n\n**Questions?** Post on the canvas discussion board or come to office hours!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}