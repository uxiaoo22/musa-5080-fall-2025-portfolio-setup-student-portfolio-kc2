---
title: "Assignment 2: Spatial Analysis and Visualization"
subtitle: "Healthcare Access and Equity in Pennsylvania"
author: "Xiao Yu"
date: Oct 12, 2025
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
    embed-resources: true
execute:
  warning: false
  message: false
---

## Assignment Overview

**Learning Objectives:**
- Apply spatial operations to answer policy-relevant research questions
- Integrate census demographic data with spatial analysis
- Create publication-quality visualizations and maps
- Work with spatial data from multiple sources
- Communicate findings effectively for policy audiences

---

## Part 1: Healthcare Access for Vulnerable Populations

### Research Question

**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**

Your analysis should identify counties that should be priorities for healthcare investment and policy intervention.

### Required Analysis Steps

Complete the following analysis, documenting each step with code and brief explanations:

#### Step 1: Data Collection (5 points)

Load the required spatial data:
- Pennsylvania county boundaries
- Pennsylvania hospitals (from lecture data)
- Pennsylvania census tracts

**Your Task:**
```{r}
# Load required packages
library(sf)
library(tidycensus)
library(tigris)
library(dplyr)
library(ggplot2)
library(units)
library(stringr)
library(knitr)
library(scales)
library(readr)
library(kableExtra)


# Load spatial data
pa_counties=st_read("/Users/cathy/GitHub/MUSA-5080-Fall-2025/lectures/week-04/data/Pennsylvania_County_Boundaries.shp")
pa_hospital=st_read("/Users/cathy/GitHub/MUSA-5080-Fall-2025/lectures/week-04/data/hospitals.geojson")
census_tracts <- tracts(state="PA", cb=TRUE)

# Check that all data loaded correctly
head(pa_counties)
head(pa_hospital)
head(census_tracts)

```

```{r, echo=FALSE}
cat("CRS summary — Counties:", st_crs(pa_counties)$input,
    "; Hospitals:", st_crs(pa_hospital)$input,
    "; Tracts:", st_crs(census_tracts)$input, "\n")
```



**Questions to answer:**
- How many hospitals are in your dataset?
219
- How many census tracts?
3445
- What coordinate reference system is each dataset in?
Counties: WGS 84 / Pseudo-Mercator ; Hospitals: WGS 84 ; Tracts: NAD83 
---

#### Step 2: Get Demographic Data 

Use `tidycensus` to download tract-level demographic data for Pennsylvania.

**Required variables:**
- Total population
- Median household income
- Population 65 years and over (you may need to sum multiple age categories)

**Your Task:**
```{r}
# Get demographic data from ACS
data=c(over65="DP05_0024",income="DP03_0062",population="DP02_0018")
d1=get_acs(
  state = "PA",
  geography = "tract",
  year = 2023,
  survey = "acs5",
  variables = data,
  geometry = TRUE,
  output="wide"
)

# Join to tract boundaries
d1 <- left_join(census_tracts, st_drop_geometry(d1), by = "GEOID")

head(d1)
st_geometry_type(d1)

```

```{r}
# Check for missing income values
sum(is.na(d1$incomeE))

# Calculate the median income across all tracts
median_income <- median(d1$incomeE, na.rm = TRUE)
median_income

```

**Questions to answer:**
- What year of ACS data are you using?
2023 ACS 5-Year Estimates.
- How many tracts have missing income data?
65
- What is the median income across all PA census tracts?
72943.5
---

#### Step 3: Define Vulnerable Populations 

Identify census tracts with vulnerable populations based on TWO criteria:
1. Low median household income (choose an appropriate threshold)
2. Significant elderly population (choose an appropriate threshold)

**Your Task:**
```{r}
# Filter for vulnerable tracts based on your criteria
summary(d1)

vulnerable=d1%>%
  filter(over65E>945|incomeE<32150
  )
num_vulnerable <- nrow(vulnerable)
total_tracts <- nrow(d1)
percent_vulnerable <- round((num_vulnerable / total_tracts) * 100, 1)

cat("Low income threshold: $32,150\n")
cat("Elderly population threshold: 945 people\n")
cat("Number of vulnerable tracts:", num_vulnerable, "\n")
cat("Total tracts:", total_tracts, "\n")
cat("Percentage of vulnerable tracts:", percent_vulnerable, "%\n")

```

**Questions to answer:**
- What income threshold did you choose and why?
I chose an income threshold of $32,150, based on the 2023 U.S. Federal Poverty Guideline. This provides a policy-relevant definition of low-income households.

- What elderly population threshold did you choose and why?
I selected 945 residents aged 65 and over as the threshold, which represents roughly the top 25% of tracts by elderly population size. These areas are likely to face higher demand for healthcare and mobility support.

- How many tracts meet your vulnerability criteria?
974 tracts meet at least one of the criteria.

- What percentage of PA census tracts are considered vulnerable by your definition?
Approximately 28.3% of all Pennsylvania census tracts are considered vulnerable.
---

#### Step 4: Calculate Distance to Hospitals 

For each vulnerable tract, calculate the distance to the nearest hospital.

**Your Task:**
```{r}
# Transform to appropriate projected CRS
proj_crs <- 3365

vulnerable_proj <- vulnerable %>%
  st_transform(proj_crs)

hosp_proj <- pa_hospital %>%
  st_transform(proj_crs)

vulner_centroid <- st_centroid(vulnerable_proj)

dist <- vulner_centroid %>%
  mutate(
    dist_meters = apply(st_distance(vulner_centroid, hosp_proj), 1, min),
    dist_miles = dist_meters * 0.000621371
  )

avg_dist <- mean(dist$dist_miles, na.rm = TRUE)
max_dist <- max(dist$dist_miles, na.rm = TRUE)
num_over15 <- sum(dist$dist_miles > 15)

cat("Average distance to nearest hospital (miles):", round(avg_dist, 2), "\n")
cat("Maximum distance (miles):", round(max_dist, 2), "\n")
cat("Number of vulnerable tracts >15 miles from a hospital:", num_over15, "\n")

```

**Requirements:**
- Use an appropriate projected coordinate system for Pennsylvania
- Calculate distances in miles
- Explain why you chose your projection

**Questions to answer:**
- What is the average distance to the nearest hospital for vulnerable tracts?
The average distance to the nearest hospital for vulnerable tracts is approximately 13.72 miles.
- What is the maximum distance?
The maximum distance from a vulnerable tract to the nearest hospital is 85.18 miles.
- How many vulnerable tracts are more than 15 miles from the nearest hospital?
There are 314 tracts located more than 15 miles from the nearest hospital.

Projection used: EPSG:3365 – NAD83 / Pennsylvania South.
It was chosen because it preserves local distances and areas for Pennsylvania, ensuring accurate measurement results in meters rather than degrees.
---

#### Step 5: Identify Underserved Areas 

Define "underserved" as vulnerable tracts that are more than 15 miles from the nearest hospital.

**Your Task:**
```{r}
#### Step 5: Identify Underserved Areas 

underserved <- dist %>%
  mutate(underserved = ifelse(dist_miles > 15, TRUE, FALSE))

num_underserved <- sum(underserved$underserved, na.rm = TRUE)
total_vulnerable <- nrow(underserved)
perc_underserved <- round((num_underserved / total_vulnerable) * 100, 1)

cat("Number of underserved tracts:", num_underserved, "\n")
cat("Percentage of vulnerable tracts that are underserved:", perc_underserved, "%\n")

```

**Questions to answer:**
- How many tracts are underserved?
314 tracts are considered underserved.
- What percentage of vulnerable tracts are underserved?
32.2% of all vulnerable tracts are underserved.
- Does this surprise you? Why or why not?
This result is not surprising. Many underserved tracts are likely located in rural or remote counties, particularly in central and northern Pennsylvania, where hospitals are sparse and travel distances are long. In contrast, urban areas such as Philadelphia and Pittsburgh have higher hospital densities, providing better healthcare accessibility.
---

#### Step 6: Aggregate to County Level

Use spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.

**Your Task:**
```{r}
pa_counties_proj <- st_transform(pa_counties, st_crs(underserved))
tracts_with_county <- st_join(underserved, pa_counties_proj, join = st_intersects, left = FALSE)

st_crs(underserved)$input
st_crs(pa_counties_proj)$input

tracts_with_county <- st_join(underserved, pa_counties_proj, join = st_intersects, left = FALSE)

names(pa_counties)

county_summary <- tracts_with_county %>%
  st_drop_geometry() %>%
  group_by(COUNTY_NAM) %>%
  summarise(
    vulnerable_tracts = n(),
    underserved_tracts = sum(underserved, na.rm = TRUE),
    perc_underserved = round((underserved_tracts / vulnerable_tracts) * 100, 1),
    avg_distance_miles = round(mean(dist_miles, na.rm = TRUE), 2),
    total_vulnerable_pop = sum(populationE, na.rm = TRUE)
  ) %>%
  arrange(desc(perc_underserved))

head(county_summary, 10)
```

**Required county-level statistics:**
- Number of vulnerable tracts
- Number of underserved tracts  
- Percentage of vulnerable tracts that are underserved
- Average distance to nearest hospital for vulnerable tracts
- Total vulnerable population

**Questions to answer:**
- Which 5 counties have the highest percentage of underserved vulnerable tracts?
NORTHUMBERLAND,SNYDER,TIOGA,VENANGO,PIKE

- Which counties have the most vulnerable people living far from hospitals?
ALLEGHENY,PHILADELPHIA,BUCKS,MONTGOMERY,LANCASTER

- Are there any patterns in where underserved counties are located?
Underserved counties are mainly located in rural northern and central Pennsylvania, where low population density and limited hospital infrastructure create significant barriers to healthcare access.
---

#### Step 7: Create Summary Table 

Create a professional table showing the top 10 priority counties for healthcare investment.

**Your Task:**
```{r}
# Create and format priority counties table

priority_counties <- county_summary %>%
arrange(desc(perc_underserved), desc(avg_distance_miles)) %>%
slice_head(n = 10) %>%
mutate(
perc_underserved = paste0(perc_underserved, "%"),
avg_distance_miles = round(avg_distance_miles, 2),
total_vulnerable_pop = formatC(total_vulnerable_pop, format = "d", big.mark = ",")
)

library(kableExtra)
kable(
  priority_counties,
  col.names = c("County", "Vulnerable Tracts", "Underserved Tracts", "% Underserved", 
                "Avg Distance (miles)", "Total Vulnerable Population"),
  caption = "Table 1. Top 10 Pennsylvania Counties with the Greatest Need for Healthcare Investment",
  align = "c"
) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed", "responsive"),
    full_width = FALSE,
    position = "center",
    font_size = 13
  ) %>%
  row_spec(0, bold = TRUE, background = "darkgrey", color = "white") %>% 
  row_spec(1:10, background = "#f8f9fa") %>%                             
  add_header_above(c(" " = 1, "Tract Counts" = 2, "Accessibility & Population" = 3)) 

```

**Requirements:**
- Use `knitr::kable()` or similar for formatting
- Include descriptive column names
- Format numbers appropriately (commas for population, percentages, etc.)
- Add an informative caption
- Sort by priority (you decide the metric)

---

## Part 2: Comprehensive Visualization 

Using the skills from Week 3 (Data Visualization), create publication-quality maps and charts.

### Map 1: County-Level Choropleth 

Create a choropleth map showing healthcare access challenges at the county level.

**Your Task:**
```{r}
library(sf)
library(tidyverse)
library(tmap)
library(knitr)
tmap_mode("plot")
tm_shape(pa_counties_proj %>% 
           left_join(county_summary, by = c("COUNTY_NAM" = "COUNTY_NAM"))) +
  tm_polygons(
    col = "avg_distance_miles",     
    palette = "Blues",                
    style = "quantile",
    n = 5,
    title = "Avg. Distance to Hospital (miles)"
  ) +
  tm_borders(col = "gray50", lwd = 0.5) +
  tm_layout(
    legend.outside = TRUE,
    frame = FALSE,
    bg.color = "white"
  )

```

**Requirements:**
- Fill counties by percentage of vulnerable tracts that are underserved
- Include hospital locations as points
- Use an appropriate color scheme
- Include clear title, subtitle, and caption
- Use `theme_void()` or similar clean theme
- Add a legend with formatted labels

---

### Map 2: Detailed Vulnerability Map 

Create a map highlighting underserved vulnerable tracts.

**Your Task:**
```{r}
library(ggplot2)
library(dplyr)
library(sf)

county_map <- pa_counties %>%
  st_transform(3365) %>%
  left_join(county_summary, by = c("COUNTY_NAM" = "COUNTY_NAM"))

hospital_points <- pa_hospital %>%
  st_transform(3365)

ggplot() +
  geom_sf(data = county_map, aes(fill = perc_underserved), color = "white", size = 0.3) +
  geom_sf(data = hospital_points, color = "pink", size = 1, alpha = 0.7) +
  scale_fill_gradient(
    name = "% Underserved\nVulnerable Tracts",
    low = "lightgrey", high = "black",
    labels = function(x) paste0(x, "%")
  ) +
  labs(
    title = "Healthcare Accessibility Across Pennsylvania Counties",
    subtitle = "Percentage of vulnerable tracts underserved and hospital locations",
    caption = "Data source: 2023 ACS 5-Year Estimates & Pennsylvania Department of Health"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12, margin = margin(b = 10)),
    plot.caption = element_text(size = 9, color = "gray40"),
    legend.title = element_text(size = 10, face = "bold"),
    legend.text = element_text(size = 9),
    legend.position = "right"
  )

```

**Requirements:**
- Show underserved vulnerable tracts in a contrasting color
- Include county boundaries for context
- Show hospital locations
- Use appropriate visual hierarchy (what should stand out?)
- Include informative title and subtitle

---

### Chart: Distribution Analysis

Create a visualization showing the distribution of distances to hospitals for vulnerable populations.

**Your Task:**
```{r}
# Create a clean dataframe of distances
dist_df <- dist %>%
  st_drop_geometry() %>%
  select(dist_miles)

ggplot(dist_df, aes(x = dist_miles)) +
  geom_histogram(
    bins = 30,
    fill = "lightpink",
    color = "white",
    alpha = 0.8
  ) +
  labs(
    title = "Distribution of Distances to the Nearest Hospital (Vulnerable Tracts)",
    x = "Distance to Nearest Hospital (miles)",
    y = "Number of Vulnerable Census Tracts",
    caption = "Most vulnerable tracts are within 15 miles of a hospital, but a right tail shows rural access challenges."
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(size = 15, face = "bold"),
    axis.title = element_text(face = "bold"),
    plot.caption = element_text(size = 10, color = "gray40")
  )


```

**Suggested chart types:**
- Histogram or density plot of distances
- Box plot comparing distances across regions
- Bar chart of underserved tracts by county
- Scatter plot of distance vs. vulnerable population size

**Requirements:**
- Clear axes labels with units
- Appropriate title
- Professional formatting
- Brief interpretation (1-2 sentences as a caption or in text)

---

## Part 3: Bring Your Own Data Analysis 

Choose your own additional spatial dataset and conduct a supplementary analysis.

### Challenge Options

Choose ONE of the following challenge exercises, or propose your own research question using OpenDataPhilly data (https://opendataphilly.org/datasets/). 

**Note these are just loose suggestions to spark ideas - follow or make your own as the data permits and as your ideas evolve. This analysis should include bringing in your own dataset, ensuring the projection/CRS of your layers align and are appropriate for the analysis (not lat/long or geodetic coordinate systems). The analysis portion should include some combination of spatial and attribute operations to answer a relatively straightforward question**

---

**School Safety Zones**
- **Data:** Schools, Crime Incidents, Bike Network
- **Question:** "Are school zones safe for walking/biking, or are they crime hotspots?"
- **Operations:** Buffer schools (1000ft safety zone), spatial join with crime incidents, assess bike infrastructure coverage
- **Policy relevance:** Safe Routes to School programs, crossing guard placement

---

### Data Sources

**OpenDataPhilly:** https://opendataphilly.org/datasets/
- Most datasets available as GeoJSON, Shapefile, or CSV with coordinates
- Always check the Metadata for a data dictionary of the fields.

**Additional Sources:**
- **Pennsylvania Open Data:** https://data.pa.gov/
- **Census Bureau (via tidycensus):** Demographics, economic indicators, commute patterns
- **TIGER/Line (via tigris):** Geographic boundaries

### Recommended Starting Points

**If you're feeling confident:** Choose an advanced challenge with multiple data layers. 
**If you are a beginner, choose something more manageable that helps you understand the basics**


**If you have a different idea:** Propose your own question! Just make sure:
- You can access the spatial data
- You can perform at least 2 spatial operations

### Your Analysis

**Your Task:**

1. **Find and load additional data**
   - Document your data source
   - Check and standardize the CRS
   - Provide basic summary statistics

```{r}
# Load your additional dataset
library(sf)
library(tidyverse)
library(tmap)

schools <- st_read("/Users/cathy/GitHub/portfolio-setup-uxiaoo22/Assignments/Assignment_2/Schools.geojson")
crime <- st_read("/Users/cathy/GitHub/portfolio-setup-uxiaoo22/Assignments/Assignment_2/incidents_part1_part2/incidents_part1_part2.shp")
bike_network <- st_read("/Users/cathy/GitHub/portfolio-setup-uxiaoo22/Assignments/Assignment_2/PhiladelphiaBikeNetwork_SupportingDatasets201209/BikeNetwork_SupportingDatasets201209/PhiladelphiaBikeNetwork201204.shp")

# Convert all to same projected CRS
schools <- st_transform(schools, 2272)
crime <- st_transform(crime, 2272)
bike_network <- st_transform(bike_network, 2272)


st_crs(schools)
st_crs(crime)
st_crs(bike_network)

nrow(schools); nrow(crime); nrow(bike_network)

```

**Questions to answer:**
- What dataset did you choose and why?
I selected three datasets, Philadelphia Schools, Crime Incidents, and the Philadelphia Bike Network for analyzing school safety environments. This combination allows an examination of whether schools are located in areas with high crime density and limited bicycle infrastructure, which is relevant for understanding walkability and student safety.

- What is the data source and date?
All datasets were obtained from OpenDataPhilly. 
Schools: Data includes points identifying public, charter, private, and archdiocesan schools, as well as school annexes, athletic fields, and facilities. It supports the Streets Department’s school signage and crosswalk initiatives. Last updated February 2, 2024.

Crime Incidents: Provided by the Philadelphia Police Department (2025), including Part I crimes such as aggravated assault, rape, and arson.

Bike Network – Supporting Datasets: Compiled by the Philadelphia City Planning Commission (April 2012), integrating data from multiple city departments to support bike network routing and documentation.

- How many features does it contain?
Schools: 495 point features
Crime incidents: 120,567 point features
Bike network: 3,719 line features

- What CRS is it in? Did you need to transform it?
All datasets were standardized to EPSG:2272 – NAD83 / Pennsylvania South (ftUS).
The Schools dataset was originally in WGS 84 (EPSG:4326) and was transformed to EPSG:2272 to ensure consistent spatial analysis and accurate distance or buffer measurements in feet.

---

2. **Pose a research question**

Research Question:Are schools in high-crime areas lacking nearby bicycle infrastructure?

---

3. **Conduct spatial analysis**

Use at least TWO spatial operations to answer your research question.

**Required operations (choose 2+):**
- Buffers
- Spatial joins
- Spatial filtering with predicates
- Distance calculations
- Intersections or unions
- Point-in-polygon aggregation

**Your Task:**
```{r}

# Create 500 ft buffers around schools
school_buffer <- st_buffer(schools, dist = 500)

# Create 300 ft buffers around bike lanes
bike_buffer <- st_buffer(bike_network, dist = 300)

# Quick visualization
library(tmap)

tmap_mode("plot")

tm_shape(bike_buffer) + 
  tm_borders(col = "steelblue", lwd = 1) +
  tm_shape(school_buffer) + 
  tm_borders(col = "red", lwd = 1) +
  tm_shape(crime) + 
  tm_dots(col = "black", size = 0.02) +
  tm_layout(
    title = "School and Bike Lane Buffers with Crime Points",
    frame = FALSE,
    legend.outside = TRUE
  )


```

```{r}
# 1. Buffer
school_buffer <- st_buffer(schools, dist = 500)
bike_buffer <- st_buffer(bike_network, dist = 300)

# 2. Spatial join: count crimes in each school buffer
crime_in_school <- st_join(crime, school_buffer, join = st_within)

crime_summary <- crime_in_school %>%
  st_drop_geometry() %>%
  group_by(school_name) %>%
  summarise(crime_count = n())

# 3. Identify whether each school has nearby bike lanes
school_bike_join <- school_buffer %>%
  mutate(has_bike = if_else(
    rowSums(st_intersects(., bike_buffer, sparse = FALSE)) > 0, 1, 0
  ))

# 4. Merge crime + bike data
school_analysis <- school_bike_join %>%
  left_join(crime_summary, by = "school_name") %>%
  mutate(crime_count = replace_na(crime_count, 0),
         at_risk = if_else(crime_count > 50 & has_bike == 0, 1, 0))

# 5. Filter and visualize
at_risk_schools <- school_analysis %>% filter(at_risk == 1)


```

```{r}
school_analysis_df <- school_analysis %>%
  st_drop_geometry()

# Summary
summary_table <- school_analysis_df %>%
  summarise(
    total_schools = n(),
    total_at_risk = sum(at_risk, na.rm = TRUE),
    avg_crime_near_school = round(mean(crime_count, na.rm = TRUE), 1)
  ) %>%
  rename(
    "Total Schools" = total_schools,
    "At-Risk Schools" = total_at_risk,
    "Average Crimes Near Schools" = avg_crime_near_school
  )

summary_table %>%
  kbl(
    caption = "Table 1. Summary Statistics of School Safety and Bicycle Infrastructure in Philadelphia",
    align = c('c', 'c', 'c'),
    booktabs = TRUE
  ) %>%
  kable_styling(
    full_width = FALSE,
    bootstrap_options = c("striped", "hover", "condensed", "responsive")
  )

# Drop geometry and clean data
at_risk_table <- at_risk_schools %>%
  st_drop_geometry() %>%
  filter(!is.na(school_name_label)) %>%
  select(
    `School Name` = school_name_label,
    `Crime Incidents` = crime_count,
    `Nearby Bike Lane` = has_bike
  ) %>%
  mutate(
    `Crime Incidents` = formatC(`Crime Incidents`, format = "d", big.mark = ","),
    `Nearby Bike Lane` = if_else(`Nearby Bike Lane` == 1, "Yes", "No")
  ) %>%
  arrange(desc(as.numeric(`Crime Incidents`))) %>%
  slice_head(n = 10)

# Output table
at_risk_table %>%
  kbl(
    caption = "Table 2. Top 10 At-Risk Schools in Philadelphia: High Crime and No Nearby Bicycle Infrastructure",
    align = c("l", "c", "c"),
    booktabs = TRUE
  ) %>%
  kable_styling(
    full_width = FALSE,
    bootstrap_options = c("striped", "hover", "condensed", "responsive")
  ) %>%
  column_spec(1, bold = TRUE, width = "5cm") %>%
  column_spec(2:3, width = "3cm") %>%
  add_header_above(c(" " = 1, "Safety Risk Indicators" = 2))
```


**Analysis requirements:**
- Clear code comments explaining each step
- Appropriate CRS transformations
- Summary statistics or counts
- At least one map showing your findings
- Brief interpretation of results (3-5 sentences)

**Your interpretation:**
The analysis found that 52 out of 495 schools in Philadelphia are located in areas with both high crime density and no nearby bicycle infrastructure, posing potential safety concerns for students walking or biking to school.Most at-risk schools are concentrated in North and West Philadelphia, where crime incidents are more frequent. The absence of bicycle lanes near these schools may reduce safe commuting options for students and discourage active travel.Integrating safer bike routes and crime prevention strategies around schools could significantly improve student safety and accessibility.

## Finally - A few comments about your incorporation of feedback!
I focused on simpler, cleaner map design and improved table formatting for easier interpretation.  

---

## Submission Requirements

**What to submit:**

1. **Rendered HTML document posted to your course portfolio** with all code, outputs, maps, and text
   - Use `embed-resources: true` in YAML so it's a single file
   - All code should run without errors
   - All maps and charts should display correctly

**File naming:** `LastName_FirstName_Assignment2.html` and `LastName_FirstName_Assignment2.qmd`

---

